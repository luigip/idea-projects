package odds

import collection.generic.CanBuildFrom
import collection.TraversableLike

object temp {

  def map[A,B,T[X] <: TraversableLike[X,T[X]]]
         (xs: T[A])(f: A => B)
         (implicit cbf: CanBuildFrom[T[A],B,T[B]]): T[B] 
    = xs.map(f)

  val res = map(List(1,2,3))("s" + _.toString)

  def main(args: Array[String]) {
    println(res)
  }
  
}
